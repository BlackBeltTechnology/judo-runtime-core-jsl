model Primitives;

import judo::types;

type numeric Scaled precision:9 scale:2;
type string PhoneNumber min-size:0 max-size:32 regex:"^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]\\d{3}[\\s.-]\\d{4}$";   // escape sequencing does not work in regexp....
type binary Binary mime-type:["text/plain"] max-file-size:1 GB;
type string SmallString min-size:0 max-size:128;

enum MyEnum {
    Atomic = 0;
    Bombastic = 1;
    Crazy = 2;
}

entity AbstractEntityOptionalFields abstract {
    field Boolean boolAttr;
    field Binary binaryAttr;
    field Integer integerAttr;
    field SmallString stringAttr;
    field PhoneNumber regexAttr;
    field Scaled scaledAttr;
    field Date dateAttr;
    field Time timeAttr;
    field Timestamp timestampAttr;
    field MyEnum enumAttr;

    field Boolean derivedBoolAttr <= self.boolAttr;
    field Binary derivedBinaryAttr <= self.binaryAttr;
    field Integer derivedIntegerAttr <= self.integerAttr;
    field SmallString derivedStringAttr <= self.stringAttr;
    field PhoneNumber derivedRegexAttr <= self.regexAttr;
    field Scaled derivedScaledAttr <= self.scaledAttr;
    field Date derivedDateAttr <= self.dateAttr;
    field Time derivedTimeAttr <= self.timeAttr;
    field Timestamp derivedTimestampAttr <= self.timestampAttr;
    field MyEnum derivedEnumAttr <= self.enumAttr;
}

entity MyEntityWithOptionalFields extends AbstractEntityOptionalFields {
}

entity EntityRequiredFields {
    field Integer integerAttr required;
    field Scaled scaledAttr required;
    field String stringAttr required;
    field PhoneNumber regexAttr required;
    field Boolean boolAttr required;
    field Date dateAttr required;
    field Timestamp timestampAttr required;
    field Time timeAttr required;
    field Binary binaryAttr required;
    field MyEnum enumAttr required;
}

entity EntityWithIdentifiers {
    identifier Integer integerAttr;
    identifier String stringAttr;
    identifier PhoneNumber regexAttr;
    identifier Boolean boolAttr;
    identifier Date dateAttr;
    identifier Timestamp timestampAttr;
    identifier Binary binaryAttr;
    identifier MyEnum enumAttr;
}

entity EntityWithIdentifiersContainer {
    field EntityWithIdentifiers[] entitiesWithIdentifiers;
}


entity EntityWithPrimitiveDefaults {
    field Integer integerAttr default:1;
    field Scaled scaledAttr default:2.34;
    field String stringAttr default:"test";
    field PhoneNumber regexAttr default:"+36 (30) 123 1234";
    field Boolean boolAttr default:true;
    field Date dateAttr default:`2022-07-11`;
    field Timestamp timestampAttr default:`2022-07-11T19:09:33Z`;
    field Time timeAttr default:`23:59:59`;
    field Time shortTimeAttr default:`23:59`;
    field Binary binaryAttr; // There is no syntax for define default value for binary
    field MyEnum enumAttr default:MyEnum#Bombastic;
}

entity EntityRequiredWithPrimitiveDefaults {
    field Integer integerAttr default:1 required;
    field Scaled scaledAttr default:2.34 required;
    field String stringAttr default:"test" required;
    field PhoneNumber regexAttr default:"+36 (30) 123 1234" required;
    field Boolean boolAttr default:true required;
    field Date dateAttr default:`2022-07-11` required;
    field Timestamp timestampAttr default:`2022-07-11T19:09:33Z` required;
    field Time timeAttr default:`23:59:59` required;
    // field Binary binaryAttr required; // There is no syntax for define default value for binary
    field MyEnum enumAttr default:MyEnum#Bombastic required;
}

entity EntityWithPrimitiveDefaultExpressions {
    field Integer integerAttr default:1.23.round();
    field Scaled scaledAttr default:2.9.abs();
    field String stringAttr default:true.asString();
    field PhoneNumber regexAttr default:"+36 (30) 123 1234";
    field Boolean boolAttr default:2 > -1;
    field Date dateAttr default:Date.now();
    field Timestamp timestampAttr default:Timestamp.now();
    field Time timeAttr default:Time.of(hour = 23, minute = 59, second = 59);
}

entity ReferenceEntity {
    field Integer intAtt default:3;
}

entity DefaultRequiredEntity {

    //TODO JNG-4242
    //TODO JNG-3721

    identifier Date createDate default:Date.of(year = 2022, month = 11, day = 4) required;
    field Integer sumEntitiesIntegerValue default:ReferenceEntity.all().sum(e | e.intAtt) required;

}

//Entity with not valid default values

entity EntityWithNotValidIntegerDefaultValue {
        field Integer integerAttr default:1234567890;
}

entity EntityWithNotValidPrecisionDefaultValue {
        field Scaled scaledAttrWithWrongPrecision default:123456789.34;
}

entity EntityWithNotValidScaleDefaultValue {
        field Scaled scaledAttrWithWrongScale default:2.3466;
}

// TODO JNG-JNG-4899 Cause issue when the PrimitivesDaoModule injection
// entity EntityWithNotValidStringDefaultValue {
//         field SmallString stringAttr default:"To large string literal. To large string literal.To large string literal.To large string literal.To large string literal.Too larg";
// }

entity EntityWithNotValidRegexDefaultValue {
        field PhoneNumber regexAttrWrongPattern default:"+36-30 123 1234";
}

transfer MyTransferWithOptionalFields(MyEntityWithOptionalFields ent) {
    field SmallString stringAttr <=> ent.stringAttr;
}

entity TimestampFromConstant {
     field Timestamp timestampFromConstantHM <= `2023-03-20T11:11`;
     field Timestamp timestampFromConstantHMZ <= `2023-03-20T11:11Z`;
     field Timestamp timestampFromConstantHMP5 <= `2023-03-20T11:11+05`;
     field Timestamp timestampFromConstantHMM5 <= `2023-03-20T11:11-05`;
     field Timestamp timestampFromConstantHMP55 <= `2023-03-20T11:11+05:05`;
     field Timestamp timestampFromConstantHMM55 <= `2023-03-20T11:11-05:05`;
     field Timestamp timestampFromConstantHMS <= `2023-03-20T11:11:11`;
     field Timestamp timestampFromConstantHMSZ <= `2023-03-20T11:11:11Z`;
     field Timestamp timestampFromConstantHMSP5 <= `2023-03-20T11:11:11+05`;
     field Timestamp timestampFromConstantHMSM5 <= `2023-03-20T11:11:11-05`;
     field Timestamp timestampFromConstantHMSP55 <= `2023-03-20T11:11:11+05:05`;
     field Timestamp timestampFromConstantHMSM55 <= `2023-03-20T11:11:11-05:05`;
     field Timestamp timestampFromConstantHMSF <= `2023-03-20T11:11:11.111`;
     field Timestamp timestampFromConstantHMSFZ <= `2023-03-20T11:11:11.111Z`;
     field Timestamp timestampFromConstantHMSFP5 <= `2023-03-20T11:11:11.111+05`;
     field Timestamp timestampFromConstantHMSFM5 <= `2023-03-20T11:11:11.111-05`;
     field Timestamp timestampFromConstantHMSFP55 <= `2023-03-20T11:11:11.111+05:05`;
     field Timestamp timestampFromConstantHMSFM55 <= `2023-03-20T11:11:11.111-05:05`;
}
