model TransferRange;

import judo::types;

type numeric Double precision:10 scale:8;

entity abstract Fruit {
    field required String variety;
}

transfer TransferFruit (Fruit fruit) {
    field required String variety <= fruit.variety update:auto;
}

transfer TransferApple (Apple fruit) {
    field required String variety <= fruit.variety update:auto;
}

transfer TransferPear (Pear fruit) {
    field required String variety <= fruit.variety update:auto;
}

entity Apple extends Fruit {}

entity Pear extends Fruit {}

entity Basket {
    relation Fruit breakfast;
    relation Fruit galaFruit;
}

transfer TransferBasket (Basket basket) {
    relation TransferFruit breakfast <= basket.breakfast choices: Apple.all() eager:true;
    relation TransferFruit fruits choices: Pear.all(); // eager:true not allowed on transient field
    relation TransferFruit galaFruit <= basket.galaFruit choices: Apple.all().filter(a | a.variety == "GALA").asCollection(entityType = Fruit) eager:true;
}