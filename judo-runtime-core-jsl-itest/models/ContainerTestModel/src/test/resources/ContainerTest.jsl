model ContainerTest;

type string String min-size:0 max-size:255;

entity A {
    field required C conA;
}

entity B extends A {
    field required D donB;
}

entity C {
    relation A containerA <= self!container(entityType = A);
    relation B containerB <= self!container(entityType = A)!asType(entityType = B);
    relation B containerB1 <= self!container(entityType = B);
}

entity D {
    relation A containerA <= self!container(entityType = B)!asType(entityType = A);
    relation A containerA1 <= self!container(entityType = A);
    relation B containerB <= self!container(entityType = B);
}

// Transaction model

entity Partner {
  field ServicePrice[] servicePrices;
}
entity ServicePrice {}

entity StockTransaction {
  field AdditionalService[] additionalServices;
  relation required Partner client;
}

entity AdditionalService {
  relation ServicePrice[] servicePrice <= self!container(entityType = StockTransaction).client.servicePrices;
}
