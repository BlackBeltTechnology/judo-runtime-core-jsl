model MappedTransferCompositonAssociation;

import judo::types;

// not required Single and Multi
entity EntityA {
    field EntityB singleEntityB;
    field EntityB[] multiEntityB;
}

entity EntityB {
    field String nameB;
}

transfer TransferA (EntityA a) {
    relation TransferB singleEntityB <= a.singleEntityB choices:EntityB!all();
    relation TransferB[] multiEntityB <= a.multiEntityB choices:EntityB!all();
}

transfer TransferB (EntityB b) {
    field String nameB <= b.nameB input:true;
}

// required single

entity EntityC {
    field required EntityD singleRequiredEntityD;
}

entity EntityD {
    field String nameD;
}

transfer TransferC (EntityC c) {
    relation required TransferD singleRequiredEntityD <= c.singleRequiredEntityD choices:EntityD!all();
}

transfer TransferD (EntityD d) {
    field String nameD <= d.nameD input:true;
}

