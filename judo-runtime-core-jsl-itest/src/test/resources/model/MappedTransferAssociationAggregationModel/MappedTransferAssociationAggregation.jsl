model MappedTransferAssociationAggregation;

import judo::types;

// Single relation

entity EntityA {
    field String nameA;
    relation EntityB relationBonA;
}

entity EntityB {
    field String nameB;
}

transfer TransferA (EntityA a) {
    field String nameB <=> a.nameA;
    @Embedded
    relation TransferB relationBonA <=> a.relationBonA;
}

transfer TransferB (EntityB b) {
    field String nameB <=> b.nameB;
}

// Single required relation
entity EntityC {
    field String nameC;
    relation required EntityD relationDonC;
}

entity EntityD {
    field String nameD;
}

transfer TransferC (EntityC c) {
    field String nameC <=> c.nameC;
    @Embedded
    relation required TransferD relationDonC <=> c.relationDonC;
}

transfer TransferD (EntityD d) {
    field String nameD <=> d.nameD;
}

// Multi relation
entity EntityE {
    field String nameE;
    relation EntityF[] relationFonE;
}

entity EntityF {
    field String nameF;
}

transfer TransferE (EntityE e) {
    field String nameE <=> e.nameE;
    @Embedded
    relation TransferF[] relationFonE <=> e.relationFonE;
}

transfer TransferF (EntityF f) {
    field String nameF <=> f.nameF;
}

// Navigation trough transfers

entity EntityG {
    field String nameG;
    relation EntityH relationHonG;
}

entity EntityH {
    relation EntityJ[] relationJonH;
}

entity EntityJ {
    field String nameJ;
}

transfer TransferG (EntityG g) {
    field String nameF <=> g.nameG;
    @Embedded
    relation TransferH relationHonG <=> g.relationHonG;
}

transfer TransferH (EntityH h) {
    @Embedded
    relation TransferJ[] relationJonH <=> h.relationJonH;
}

transfer TransferJ (EntityJ j) {
        field String nameJ <=> j.nameJ;
}
