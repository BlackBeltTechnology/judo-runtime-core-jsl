model AbstractModel;

type string String(min-size = 0, max-size = 128);

entity abstract A {
}

entity abstract B {
    field String nameB;
}

entity C extends B {
}

entity abstract D {
}

entity abstract E extends D {
}

entity F {
    relation G relationGOnFSingle;
    relation required G relationGOnFSingleRequired;
    relation G[] relationGOnFMulti;
    field G compositionGOnFSingle;
    field required G compositionGOnFSingleRequired;
    field G[] compositionGOnFMulti;
}

entity abstract G {
    field String nameG;
}


entity H {
    relation I relationIOnHSingle;
    relation required I relationIOnHSingleRequired;
    relation I[] relationIOnHMulti;
    field I compositionIOnHSingle;
    field required I compositionIOnHSingleRequired;
    field I[] compositionIOnHMulti;
}

entity I {
    field String nameI;
}

entity J extends I {

}

entity abstract K {
    relation M relationMOnKSingle;
    relation required M relationMOnKSingleRequired;
    relation M[] relationMOnKSingleMOnKMulti;
    field M compositionMOnKSingle;
    field required M compositionMOnKSingleRequired;
    field M[] compositionMOnKMulti;
}

entity abstract M {
    field String nameM;
}

entity N extends M {

}

entity L extends K {

}

entity abstract O {
    query O Oany() => O!all()!any();
}

entity abstract P {
    query P Pany() => P!all()!any();
    query P PQany() => Q!all()!any();
    query Q Qany() => Q!all()!any();
}

entity Q extends P {

}