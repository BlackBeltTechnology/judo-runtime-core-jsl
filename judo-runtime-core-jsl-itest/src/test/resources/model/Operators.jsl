model Operators

type numeric Integer(precision = 3, scale = 0)
type numeric BigInteger(precision = 10, scale = 0)
type numeric Scaled(precision = 6, scale = 3)
type string String(max-length = 128)
type boolean Boolean
type date Date
type timestamp Timestamp
type time Time
type binary Binary

entity DefaultOperators {
    field Integer rounded = 1.23!round()
    field Integer addition = 5 + 2
    field Integer subtraction = 5 - 2
    field Integer pow = 5 ^ 2
    field Integer multiplication = 5 * 2
    field Scaled division = 5 / 2
    field Integer divisionWhole = 5 div 2
    field Integer modulo = 5 mod 2
    field Boolean lt = 5 < 5
    field Boolean lt2 = 2 < 5
    field Boolean gt = 5 > 5
    field Boolean gt2 = 5 > 2
    field Boolean lte = 5 <= 5
    field Boolean lte2 = 2 <= 5
    field Boolean gte = 5 >= 5
    field Boolean gte2 = 5 >= 2
    field Boolean eq = 5 == 2
    field Boolean neq = 5 != 2
    field Integer conditional = 5 > 2 ? 1 : 2
    field Boolean groupAnd = (5 - 2 < 2 and 5 + 2 > 2)
    field Boolean groupOr = (5 - 2 > 2 or 5 + 2 < 2)
}

entity DerivedSource {
    field String firstName = "John"
    field String lastName = "Pro"
    field Integer age = 35
    field Scaled score = 98.75
}

entity DerivedOperators {
    field required DerivedSource source
    derived String stringConcat => self.source.firstName + " " + self.source.lastName
    derived Integer firstNameLength => self.source.firstName!length()
    derived Integer rounded => self.source.score!round()
    derived Integer addition => self.source.age + 2
    derived Integer subtraction => self.source.age - 2
    derived BigInteger pow => self.source.age ^ 2
    derived Integer multiplication => self.source.age * 2
    derived Integer division => self.source.age / 2
    derived Integer divisionWhole => self.source.age div 2
    derived Integer modulo => self.source.age mod 2
    derived Boolean lt => self.source.age < 5
    derived Boolean lt2 => 2 < self.source.age
    derived Boolean gt => self.source.age > 5
    derived Boolean gt2 => self.source.age > 2
    derived Boolean lte => self.source.age <= 5
    derived Boolean lte2 => 2 <= self.source.age
    derived Boolean gte => self.source.age >= 5
    derived Boolean gte2 => self.source.age >= 2
    derived Boolean eq => self.source.age == 2
    derived Boolean neq => self.source.age != 2
    derived Integer conditional => self.source.age > 2 ? 1 : 2
}
