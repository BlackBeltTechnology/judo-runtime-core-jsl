model Abstract;

import judo::types;

type numeric Scaled(precision = 9, scale = 2);
type string PhoneNumber(min-size = 0, max-size = 32, regex = "^(\\+\\d{1,2}\\s)?\\(?\\d{2,3}\\)?[\\s.-]\\d{3}[\\s.-]\\d{4}$");
type binary Binary(mime-types = ["text/plain"], max-file-size=1 GB);
type string SmallString(min-size = 0, max-size = 128);

enum Enum {
    EnumA = 0;
    EnumB = 1;
    EnumC = 2;
}

entity EntityForMapping {
        field Integer integerAttr;
        field Scaled scaledAttr;
        field SmallString stringAttr;
        field PhoneNumber regexAttr;
        field Boolean boolAttr;
        field Date dateAttr;
        field Timestamp timestampAttr;
        field Time timeAttr;
        field Enum enumAttr;
        field Binary binaryAttr;
}