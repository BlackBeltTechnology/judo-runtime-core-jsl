model Filter;

import judo::types;

type numeric Scaled precision:9 scale:2;
type string PhoneNumber min-size:0 max-size:32 regex:"^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]\\d{3}[\\s.-]\\d{4}$";   // escape sequencing does not work in regexp!!!!
type binary Binary mime-type:["text/plain"] max-file-size:1 GB;
type string SmallString min-size:0 max-size:128;
type string CarId min-size:0 max-size:32 regex:"^\\w{4}-\\d{3}$";

enum MyEnum {
    Atomic = 0;
    Bombastic = 1;
    Crazy = 2;
}

entity MyEntityWithOptionalFields {
    field Boolean boolAttr;
    field Binary binaryAttr;
    field Integer integerAttr;
    field SmallString stringAttr;
    field PhoneNumber regexAttr;
    field Scaled scaledAttr;
    field Date dateAttr;
    field Time timeAttr;
    field Timestamp timestampAttr;
    field MyEnum enumAttr;
    field Boolean derivedBoolAttr <= self.boolAttr;
    field Binary derivedBinaryAttr <= self.binaryAttr;
    field Integer derivedIntegerAttr <= self.integerAttr;
    field SmallString derivedStringAttr <= self.stringAttr;
    field PhoneNumber derivedRegexAttr <= self.regexAttr;
    field Scaled derivedScaledAttr <= self.scaledAttr;
    field Date derivedDateAttr <= self.dateAttr;
    field Time derivedTimeAttr <= self.timeAttr;
    field Timestamp derivedTimestampAttr <= self.timestampAttr;
    field MyEnum derivedEnumAttr <= self.enumAttr;

    field Boolean isEmptyBoolAttr <= self.boolAttr!isUndefined();
    field Boolean isEmptyIntegerAttr <= self.integerAttr!isUndefined();
    field Boolean isEmptyStringAttr <= self.stringAttr!isUndefined();
    field Boolean isEmptyRegexAttr <= self.regexAttr!isUndefined();
    field Boolean isEmptyScaledAttr <= self.scaledAttr!isUndefined();
    field Boolean isEmptyDateAttr <= self.dateAttr!isUndefined();
    field Boolean isEmptyTimeAttr <= self.timeAttr!isUndefined();
    field Boolean isEmptyTimestampAttr <= self.timestampAttr!isUndefined();
    field Boolean isEmptyEnumAttr <= self.enumAttr!isUndefined();
}
