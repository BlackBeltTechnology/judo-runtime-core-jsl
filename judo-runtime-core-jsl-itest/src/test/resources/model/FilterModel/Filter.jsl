model Filter;

import judo::types;

type numeric Scaled precision:9 scale:2;
type string PhoneNumber min-size:0 max-size:32 regex:"^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]\\d{3}[\\s.-]\\d{4}$";   // escape sequencing does not work in regexp!!!!
type binary Binary mime-type:["text/plain"] max-file-size:1 GB;
type string SmallString min-size:0 max-size:128;
type string CarId min-size:0 max-size:32 regex:"^\\w{4}-\\d{3}$";

enum MyEnum {
    Atomic = 0;
    Bombastic = 1;
    Crazy = 2;
}

entity MyEntityWithOptionalFields {
    field Boolean boolAttr;
    field Binary binaryAttr;
    field Integer integerAttr;
    field SmallString stringAttr;
    field PhoneNumber regexAttr;
    field Scaled scaledAttr;
    field Date dateAttr;
    field Time timeAttr;
    field Timestamp timestampAttr;
    field MyEnum enumAttr;

    field Boolean derivedBoolAttr <= self.boolAttr;
    field Binary derivedBinaryAttr <= self.binaryAttr;
    field Integer derivedIntegerAttr <= self.integerAttr;
    field SmallString derivedStringAttr <= self.stringAttr;
    field PhoneNumber derivedRegexAttr <= self.regexAttr;
    field Scaled derivedScaledAttr <= self.scaledAttr;
    field Date derivedDateAttr <= self.dateAttr;
    field Time derivedTimeAttr <= self.timeAttr;
    field Timestamp derivedTimestampAttr <= self.timestampAttr;
    field MyEnum derivedEnumAttr <= self.enumAttr;

}

entity FilterEntity {
    relation MyEntityWithOptionalFields[] haveTOnTheStringAttr <= MyEntityWithOptionalFields!all()!filter(e | e.stringAttr!matches(pattern = ".*t.*"));
    relation MyEntityWithOptionalFields[] TestIsTheStringAttr <= MyEntityWithOptionalFields!all()!filter(e | e.stringAttr!matches(pattern = "test"));
    relation MyEntityWithOptionalFields[] haveNoMatchOnTheStringAttr <= MyEntityWithOptionalFields!all()!filter(e | e.stringAttr!matches(pattern = "noMatch"));
    relation MyEntityWithOptionalFields[] haveUndefinedOnTheStringAttr <= MyEntityWithOptionalFields!all()!filter(e | e.stringAttr!isUndefined());
    relation MyEntityWithOptionalFields[] haveDefinedOnTheStringAttr <= MyEntityWithOptionalFields!all()!filter(e | e.stringAttr!isDefined());
}