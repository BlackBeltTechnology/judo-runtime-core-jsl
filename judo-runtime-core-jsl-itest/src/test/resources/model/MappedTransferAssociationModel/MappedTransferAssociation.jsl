model MappedTransferAssociation;

import judo::types;

// Single relation

entity EntityA {
    field String nameA;
    relation EntityB relationBonA;
}

entity EntityB {
    field String nameB;
}

transfer TransferA (EntityA a) {
    field String nameB maps a.nameA;
    field TransferB relationBonA maps a.relationBonA;
}

transfer TransferB (EntityB b) {
    field String nameB maps b.nameB;
}

// Single required relation
entity EntityC {
    field String nameC;
    relation required EntityD relationDonC;
}

entity EntityD {
    field String nameD;
}

transfer TransferC (EntityC c) {
    field String nameC maps c.nameC;
    field required TransferD relationDonC maps c.relationDonC;
}

transfer TransferD (EntityD d) {
    field String nameD maps d.nameD;
}

// Multi relation
entity EntityE {
    field String nameE;
    relation EntityF[] relationFonE;
}

entity EntityF {
    field String nameF;
}

transfer TransferE (EntityE e) {
    field String nameE maps e.nameE;
    field TransferF[] relationFonE maps e.relationFonE;
}

transfer TransferF (EntityF f) {
    field String nameF maps f.nameF;
}

// Navigation trough transfers

entity EntityG {
    field String nameG;
    relation EntityH relationHonG;
}

entity EntityH {
    relation EntityJ[] relationJonH;
}

entity EntityJ {
    field String nameJ;
}

transfer TransferG (EntityG g) {
    field String nameF maps g.nameG;
    field TransferH relationHonG maps g.relationHonG;
}

transfer TransferH (EntityH h) {
    field TransferJ[] relationJonH maps h.relationJonH;
}

transfer TransferJ (EntityJ j) {
        field String nameJ maps j.nameJ;
}
