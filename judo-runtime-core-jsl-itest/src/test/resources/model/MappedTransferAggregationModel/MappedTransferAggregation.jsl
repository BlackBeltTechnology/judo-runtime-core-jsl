model MappedTransferAggregation;

import judo::types;

// not required Single and Multi
entity EntityA {
    field EntityB singleEntityB;
    field EntityB[] multiEntityB;
}

entity EntityB {
    field String nameB;
}

transfer TransferA (EntityA a) {
	@Eager
    relation TransferB singleEntityB <=> a.singleEntityB;
    @Eager
    relation TransferB[] multiEntityB <=> a.multiEntityB;
}

transfer TransferB (EntityB b) {
    field String nameB <=> b.nameB;
}

// required single

entity EntityC {
    field required EntityD singleRequiredEntityD;
}

entity EntityD {
    field String nameD;
}

transfer TransferC (EntityC c) {
    @Eager
    relation required TransferD singleRequiredEntityD <=> c.singleRequiredEntityD;

}

transfer TransferD (EntityD d) {
    field String nameD <=> d.nameD;
}

// Navigation trough transfers

entity EntityE {
    field EntityF singleEntityF;
}

entity EntityF {
    field EntityG[] multiEntityG;
}

entity EntityG {
    field String nameG;
}

transfer TransferE (EntityE e) {
    @Eager
    relation TransferF singleEntityF <=> e.singleEntityF;
}

transfer TransferF (EntityF f) {
    @Eager
    relation TransferG[] multiEntityG <=> f.multiEntityG;
}

transfer TransferG (EntityG g) {
        field String nameG <=> g.nameG;
}
